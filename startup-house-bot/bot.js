const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");

const OPENROUTER_API_KEY =
  "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";

const token = "7743909756:AAFcTXlfMjfkM9FccC12D4-JjAyGBxQvAuA";

const bot = new TelegramBot(token, { polling: true });

// let respondedChats = {};

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text.toLowerCase();

  const options = {
    reply_markup: {
      keyboard: [["–ò–ò", "–ë–∏–∑–Ω–µ—Å"]],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  };

  if (text === "/start") {
    setTimeout(() => {
      bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Startup House! üöÄ");
    }, 2000);
    return;
  }
  if (text.includes("–ø—Ä–∏–≤–µ—Ç") || text.includes("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π")) {
    setTimeout(() => {
      bot.sendMessage(chatId, "–¢–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ò–ò –∏–ª–∏ –±–∏–∑–Ω–µ—Å? üí¨", options);
    }, 2000);
    return;
  }
  if (
    text.includes("–∏–∏") ||
    text.includes("–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç") ||
    text.includes("ai") ||
    text.includes("–±–∏–∑–Ω–µ—Å")
  ) {
    // if (respondedChats[chatId]) {
    //   return;
    // }

    setTimeout(() => {
      bot.sendMessage(
        chatId,
        "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–º–∞! –†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ò–ò –≤ –±–∏–∑–Ω–µ—Å–µ? üí°"
      );
    }, 2000);
    // respondedChats[chatId] = true;
    return;
  }
  try {
    const response = await axios.post(
      "https://openrouter.ai/api/v1/chat/completions",
      {
        model: "openchat/openchat-3.5-0106",
        messages: [{ role: "user", content: msg.text }],
      },
      {
        headers: {
          Authorization: `Bearer ${OPENROUTER_API_KEY}`,
          "HTTP-Referer": "https://t.me/StartupHouseAiBot",
          "Content-Type": "application/json",
        },
      }
    );

    const botReply = response.data.choices[0].message.content;
    bot.sendMessage(chatId, botReply);
  } catch (error) {
    console.error(
      "–û—à–∏–±–∫–∞ OpenRouter API:",
      error.response?.data || error.message
    );
    bot.sendMessage(
      chatId,
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    );
  }
});
